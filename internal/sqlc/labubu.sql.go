// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: labubu.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createLabubu = `-- name: CreateLabubu :one
INSERT INTO labubu (text) VALUES ($1) RETURNING id, text
`

func (q *Queries) CreateLabubu(ctx context.Context, text pgtype.Text) (Labubu, error) {
	row := q.db.QueryRow(ctx, createLabubu, text)
	var i Labubu
	err := row.Scan(&i.ID, &i.Text)
	return i, err
}

const getAllLabubu = `-- name: GetAllLabubu :many
SELECT id, text FROM labubu ORDER BY id
`

func (q *Queries) GetAllLabubu(ctx context.Context) ([]Labubu, error) {
	rows, err := q.db.Query(ctx, getAllLabubu)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Labubu{}
	for rows.Next() {
		var i Labubu
		if err := rows.Scan(&i.ID, &i.Text); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
